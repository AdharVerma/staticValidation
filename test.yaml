---
# Code generated by go generate; DO NOT EDIT.
apiVersion: apiextensions.crossplane.io/v1
kind: CompositeResourceDefinition
metadata:
  name: xunleash.composite.adp.allianz.io
  annotations:
    docs.allianz.io/description: |
      Provisions an Unleash feature toggle service in the Future Cloud Platform (FCP) environment for controlled feature releases.
      Unleash is a feature toggle service that allows teams to enable, disable, and rollout features safely without deploying new code,
      and for implementing feature flag management capabilities that support A/B testing, gradual rollouts, and risk-free feature deployments.
    docs.allianz.io/usecases: |
        - Implement feature toggles for gradual feature rollouts
        - Enable A/B testing and experimentation workflows
        - Reduce deployment risk through controlled feature releases
        - Enable rapid feature iteration without code deployments
        - Implement user segmentation and targeted feature releases
    docs.allianz.io/adantages: |
        - Reduces deployment risk through controlled feature rollouts
        - Enables rapid experimentation without code changes or deployments
        - Provides detailed analytics on feature usage and performance impact
        - Supports enterprise authentication and fine-grained access controls
        - Offers SDK support for multiple programming languages and frameworks
        - Enables business stakeholders to control feature releases independently
    docs.allianz.io/namingConvention: |
        - Service name is determined based on the name of team used in the claim
    docs.allianz.io/tags: feature-flags, unleash, experimentation, ab-testing, deployment, canary
    docs.allianz.io/frntEndName: "Unleash"
spec:
  group: composite.adp.allianz.io
  names:
    kind: XUnleash
    plural: xunleash
    singular: xunleash
  claimNames:
    kind: Unleash
    plural: unleash
    singular: unleash
  connectionSecretKeys:
    - unleash-link
  defaultCompositeDeletePolicy: Foreground
  versions:
    - name: v1alpha1
      served: true
      referenceable: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              required:
                - unleash
              properties:
                deletionPolicy:
                  type: string
                  enum:
                    - Delete
                    - Orphan
                  default: Delete
                writeConnectionSecretToRef:
                  type: object
                  properties:
                  name:
                    type: string
                team:
                  type: object
                  properties:
                    name:
                      description: 'Team name that is associated with the specified billing account'
                      type: string
                unleash:
                  type: object
                  required:
                    - deploymentLocation
                    - serviceAdminEmail
                    - serviceParameters
                  properties:
                    deploymentLocation:
                      description: 'Location where Unleash will be deployed'
                      type: string
                    serviceAdminEmail:
                      type: string
                    serviceParameters:
                      type: object
                      description: 'ServiceParameters holds the desired parameters for Unleash'
                      required:
                      properties:
                        adminEmail:
                          type: string
                          description: 'AdminEmail: Email address of the Unleash admin'
                        kubernetesAccess:
                          type: string
                          description: 'KubernetesAccess: LDAP group name or email address of user who should have readonly access to the kubernetes objects and write access to the secrets'
                        advancedParameters:
                          type: object
                          description: 'AdvancedParameters: The advanced parameters desired for Unleash.'
                          properties:
                            upgradeWeekday:
                              type: string
                              enum:
                                - Sunday
                                - Monday
                                - Tuesday
                                - Wednesday
                                - Thursday
                              description: 'UpgradeWeekday : a specific day for the automatic upgrade'
                            upgradeDelay:
                              type: integer
                              description: "Number of days to delay automatic upgrades after the service's current version reached end of life."
                              minimum: 0
                              maximum: 90
                              default: 14
                            uptime:
                              type: string
                              pattern: (^(Mon|Tue|Wed|Thu|Fri|Sat|Sun)-(Mon|Tue|Wed|Thu|Fri|Sat|Sun) (([01]\d|2[0-3]):[0-5]\d)-(([01]\d|2[0-3]):[0-5]\d|24:00) ([A-Za-z]{2,}(\/[A-Za-z]*)?)(,(Mon|Tue|Wed|Thu|Fri|Sat|Sun)-(Mon|Tue|Wed|Thu|Fri|Sat|Sun) ([01]\d|2[0-3]):[0-5]\d-(([01]\d|2[0-3]):[0-5]\d|24:00) ([A-Za-z]{2,}(\/[A-Za-z]*)?))*$|^always$)
                              description: |
                                Set the uptime schedule for the service. (Comma-separated with elements) The value should have the format:
                                'StartWeekDay-StopWeekday StartHour:StartMinute-StopHourStopMinute IANATimeZone',
                                e.g. 'Mon-Fri 08:00-18:00 Europe/Berlin'.
                                Weekdays are abbreviated as follows: Mon, Tue, Wed, Thu, Fri, Sat, Sun.
                                IANA Time Zone names can be found here: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones .
                                Per default, no uptime schedule is set, i.e. the service is always available.
                            resourcesRequestsMemory:
                              type: string
                              description: 'ResourcesRequestsMemory: requested memory for Unleash'
                            resourcesLimitsMemory:
                              type: string
                              description: 'ResourcesLimitsMemory: memory limit for Unleash'
                            replicas:
                              description: 'Replicas: number of replicas for the instance during uptime (default: 1, max: 1)'
                              format: int32
                              type: integer
                providerConfigRef:
                  type: object
                  properties:
                    name:
                      type: string
            status:
              type: object
              properties:
                billingAccountName:
                  type: string
                teamName:
                  type: string
                enableAutomaticUpgrades:
                  type: string
                upgradeWeekday:
                  type: string
                upgradeScheduledFor:
                  type: string
                imageTag:
                  type: string
                resourcesLimitsMemory:
                  type: string
                replicas:
                  type: string
                hostService:
                  type: object
                  properties:
                    cloudAccountIdentifier:
                      type: string
                    id:
                      type: string
                    name:
                      type: string
                    region:
                      type: string
